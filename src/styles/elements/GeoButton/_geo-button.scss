// Creates a geo-button color scheme varying the background and text color based
// on the hover/focus/disabled status.
@mixin geo-button-make-scheme ($params, $css-suffix) {
  $hoverYOffsetWithBorders: -3px;

  &#{$css-suffix} {
    @if map-has-key($params, normal-background-color) {
      background: map-get($params, normal-background-color);
    }
  
    @if map-has-key($params, normal-text-color) {
      color: map-get($params, normal-text-color);
    }
  
    @if map-has-key($params, normal-border-color) {
      border-color: map-get($params, normal-border-color);
    }

    &:hover, &[hover], &:focus, &[focus] {
      @if map-has-key($params, hover-transform) {
        transform: map-get($params, hover-transform);
        transition: transform $easing_base $duration_noticeable;

        &:after {
          /* Basic setup */
          position: absolute;
          content: "";
          width: 100%;
          top: 0;
          left: 0;
      
          /* Bottom is positioned to cover the area the hovered element is leaving */
          bottom: $hoverYOffsetWithBorders;
      
          /* We need to place the pseudo-element under everything else. Without 
            specifying the placement, it will sit on top of the parent element (our card)
            and block the user from selecting text or clicking links */
          z-index: -1;
        }
      }

      @if map-has-key($params, hover-decoration) {
        text-decoration: map-get($params, hover-decoration);
      }

      @if map-has-key($params, hover-shadow) {
        box-shadow: map-get($params, hover-shadow);
      }

      @if map-has-key($params, hover-background-color) {
        background: map-get($params, hover-background-color);
      }
  
      @if map-has-key($params, hover-text-color) {
        color: map-get($params, hover-text-color);
      }
  
      @if map-has-key($params, hover-border-color) {
        border-color: map-get($params, hover-border-color);
      }
    }

    &:active {
      @if map-has-key($params, hover-transform) {
        transform: none;
      }

      @if map-has-key($params, hover-decoration) {
        text-decoration: none;
      }

      @if map-has-key($params, hover-shadow) {
        box-shadow: none;
      }
    }
  }

  &--disabled#{$css-suffix} {
    @if map-has-key($params, disabled-background-color) {
      background: map-get($params, disabled-background-color);
    }

    @if map-has-key($params, disabled-text-color) {
      color: map-get($params, disabled-text-color);
    }

    @if map-has-key($params, disabled-border-color) {
      border-color: map-get($params, disabled-border-color);
    }

    &:hover, &[hover], &:focus, &[focus] {
      @if map-has-key($params, hover-transform) {
        transform: none;
      }

      @if map-has-key($params, hover-decoration) {
        text-decoration: none;
      }

      @if map-has-key($params, hover-shadow) {
        box-shadow: none;
      }

      @if map-has-key($params, hover-and-disabled-background-color) {
        background: map-get($params, hover-and-disabled-background-color);
      } @else if map-has-key($params, disabled-background-color) {
        background: map-get($params, disabled-background-color);
      } @else if map-has-key($params, hover-background-color) {
        background: map-get($params, hover-background-color);
      }

      @if map-has-key($params, hover-and-disabled-border-color) {
        border-color: map-get($params, hover-and-disabled-border-color);
      } @else if map-has-key($params, disabled-border-color) {
        border-color: map-get($params, disabled-border-color);
      } @else if map-has-key($params, hover-border-color) {
        border-color: map-get($params, hover-border-color);
      }

      @if map-has-key($params, hover-and-disabled-text-color) {
        color: map-get($params, hover-and-disabled-text-color);
      } @else if map-has-key($params, disabled-text-color) {
        color: map-get($params, disabled-text-color);
      } @else if map-has-key($params, hover-text-color) {
        color: map-get($params, hover-text-color);
      }
    }
  }
}

@mixin geo-button--primary($css-suffix) {
  $hoverYOffset: -1px;

  @include geo-button-make-scheme((
    normal-background-color: $color_blue,
    normal-text-color: $color_white,
    disabled-background-color: $color_blue,
    disabled-text-color: $color_white,
    hover-shadow: $box_shadow_button_hover,
    hover-transform: translateY($hoverYOffset)
  ), $css-suffix);

  &#{$css-suffix} {
    transition: all $duration_quickly $easing_base;
    transition-property: background-color;
  }
}

@mixin geo-button--secondary($css-suffix) {
  $hoverYOffset: -1px;
  
  @include geo-button-make-scheme((
    normal-background-color: $color_white,
    normal-text-color: $color_blue,
    normal-border-color: $color_blue,
    disabled-background-color: $color_white,
    disabled-text-color: $color_blue,
    disabled-border-color: $color_blue,
    hover-shadow: $box_shadow_button_hover,
    hover-transform: translateY($hoverYOffset)
  ), $css-suffix);

  &#{$css-suffix} {
    transition: all $duration_quickly $easing_base;
    transition-property: background-color, border-color, color;
  }
}

@mixin geo-button--tertiary($css-suffix) {
  @include geo-button-make-scheme((
    normal-background-color: transparent,
    normal-text-color: $color_blue,
    normal-border-color: transparent,
    disabled-text-color: $color_blue,
    hover-decoration: underline
  ), $css-suffix);

  &#{$css-suffix} {
    font-style: italic;
    font-weight: $font_weight_light;
    text-transform: initial;

    transition: color $duration_quickly $easing_base;
  }
}

@mixin geo-button--destructive($css-suffix) {
  $hoverYOffset: -1px;

  @include geo-button-make-scheme((
    normal-background-color: $color_red,
    normal-text-color: $color_white,
    disabled-background-color: $color_red,
    hover-shadow: $box_shadow_button_hover,
    hover-transform: translateY($hoverYOffset)
  ), $css-suffix);

  &#{$css-suffix} {
    transition: all $duration_quickly $easing_base;
    transition-property: background-color, border-color, color;
  }
}

@mixin geo-button--danger($css-suffix) {
  $hoverYOffset: -1px;

  @include geo-button-make-scheme((
    normal-background-color: $color_red,
    normal-text-color: $color_white,
    disabled-background-color: $color_red,
    hover-shadow: $box_shadow_button_hover,
    hover-transform: translateY($hoverYOffset)
  ), $css-suffix);

  &#{$css-suffix} {
    transition: all $duration_quickly $easing_base;
    transition-property: background-color, border-color, color;
  }
}

@mixin geo-button($css-suffix) {
  &#{$css-suffix} {
    align-items: center;
    justify-content: center;
    border-radius: 3px;
    border: 1px solid transparent;
    box-sizing: border-box;
    cursor: pointer;
    display: flex;
    font-family: $font_family_text;
    font-size: $display_x_small;
    font-weight: $font_weight_bold;
    height: 30px;
    letter-spacing: 1px;
    line-height: 1.25em;
    position: relative;
    text-transform: uppercase;
    user-select: none;

    .geo-button__label#{$css-suffix} {
      padding: .58em .83em .67em .83em;
      transition: all $duration_noticeable $easing_base;
      transition-property: transform, opacity;
    }
  
    .geo-button__label--loading#{$css-suffix} {
      transform: scale(0);
      opacity: 0;
    }
  
    .geo-button__activity-indicator#{$css-suffix} {
      height: 20px;
      position: absolute;
      width: 20px;
    }
  }

  $this: &;

  &--disabled#{$css-suffix} {
    cursor: not-allowed;

    &:not(#{$this}--loading#{$css-suffix}) {
      opacity: .3;
    }
  }
}

@mixin geo-button-make($modifier-name) {

  $modifier-name-with-prefix: '';

  @if $modifier-name != '' {
    // sass-lint:disable space-around-operator
    $modifier-name-with-prefix: --#{$modifier-name};
  }

  .geo-button {
    @include geo-button($modifier-name-with-prefix);
  }

  .geo-button--primary {
    @include geo-button--primary($modifier-name-with-prefix);
  }

  .geo-button--secondary{
    @include geo-button--secondary($modifier-name-with-prefix);
  }

  .geo-button--tertiary {
    @include geo-button--tertiary($modifier-name-with-prefix);
  }

  .geo-button--danger {
    @include geo-button--danger($modifier-name-with-prefix);
  }

  .geo-button--destructive {
    @include geo-button--destructive($modifier-name-with-prefix);
  }
}

@include geo-button-make('');
